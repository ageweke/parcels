describe "Parcels basic operations", :type => :system do
  context "with a simple widget" do
    before :each do
      files {
        file 'assets/basic.css', %{
          //= require_parcels
        }

        widget 'views/my_widget' do
          css %{
            p { color: red; }
          }

          content %{
            div {
              p "nested one"
              address "nested two"
            }
            p {
              span "hello"
              span "goodbye"
            }
          }
        end
      }
    end

    it "should aggregate the CSS from a simple widget properly" do
      expect_css_content_in('basic',
        'views/my_widget.rb' => {
          widget_scoped(:p) => "color: red"
        })
    end

    it "should apply the correct autogenerated class to (only) the outermost elements of the widget" do
      doc = rendered_widget_content('views/my_widget')

      expect(classes_from(doc, 'div')).to eq([ widget_outer_element_class_from_subpath("views/my_widget") ])
      expect(classes_from(doc, 'div/p')).to be_empty
      expect(classes_from(doc, 'div/address')).to be_empty

      expect(classes_from(doc, 'p')).to eq([ widget_outer_element_class_from_subpath("views/my_widget") ])
      expect(classes_from(doc, 'p/span[1]')).to be_empty
      expect(classes_from(doc, 'p/span[2]')).to be_empty
    end
  end
end
