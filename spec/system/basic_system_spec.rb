require 'spec/parsing/sprockets_asset'
require 'spec/parsing/compiled_asset'
require 'spec/expected/expected_asset'

describe "Parcels basic operations", :type => :system do
  context "with a simple widget" do
    before :each do
      files {
        file 'assets/basic.css', %{
          //= require_parcels
        }

        widget 'views/my_widget' do
          css %{
            p { color: red; }
          }
        end
      }
    end

    it "should aggregate the CSS from a simple widget properly" do
      expect_css_content_in('basic',
        'views/my_widget.rb' => {
          widget_scoped(:p) => "color: red"
        })
    end

    it "should aggregate the CSS from a simple widget properly (using new tools)" do
      raw_asset = Spec::Parsing::SprocketsAsset.new(sprockets_env, 'basic')
      compiled_asset = Spec::Parsing::CompiledAsset.new(raw_asset)

      expected_asset = Spec::Expected::ExpectedAsset.new(files_root, 'views/my_widget.rb') do
        expect_wrapped_rule :p, 'color: red'
      end

      compiled_asset.assert_matches!(expected_asset)
    end

    it "should apply the correct autogenerated class to the widget" do
      doc = rendered_widget_content('views/my_widget')
      expect_wrapper_classes(doc, 'p', 'views/my_widget')
    end
  end
end
